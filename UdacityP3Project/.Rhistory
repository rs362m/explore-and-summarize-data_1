ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
color = IncomeRange)) +
geom_jitter(alpha=1/5) +
scale_color_brewer(type='seq') +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ IsBorrowerHomeowner) +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by IsBorrowerHomeowner\n")
ggplot(aes(x = CreditScoreRangeUpper, y = mean_Loan_Amount),
data = LoanData.ld_by_CreditScoreRangeUpper_IsBorrowerHomeowner) +
geom_line(aes(color=IsBorrowerHomeowner)) +
xlab("\nCreditScoreRangeUpper") +
ylab("Mean LoanorignalAmount\n") +
ggtitle("Mean Loan Amount vs CreditScoreRangeUpper
by IsBorrowerHomeowner\n")
LoanData.ld_by_CreditScoreRangeUpper_IsBorrowerHomeowner <- LoanData %>%
dplyr::group_by(CreditScoreRangeUpper,IsBorrowerHomeowner) %>%
dplyr::summarise(mean_Loan_Amount=mean(LoanOriginalAmount),
median_Loan_Amount=median(as.numeric(LoanOriginalAmount)),
n =n()) %>%
dplyr::ungroup() %>%
arrange(CreditScoreRangeUpper)
ggplot(aes(x = CreditScoreRangeUpper, y = mean_Loan_Amount),
data = LoanData.ld_by_CreditScoreRangeUpper_IsBorrowerHomeowner) +
geom_line(aes(color=IsBorrowerHomeowner)) +
xlab("\nCreditScoreRangeUpper") +
ylab("Mean LoanorignalAmount\n") +
ggtitle("Mean Loan Amount vs CreditScoreRangeUpper
by IsBorrowerHomeowner\n")
mp7 <- ggplot(aes(x = CreditScoreRangeUpper, y = mean_Loan_Amount),
data = LoanData.ld_by_CreditScoreRU_IsBorrowerHomeowner) +
geom_line(aes(color=IsBorrowerHomeowner)) +
xlab("\nCreditScoreRangeUpper") +
ylab("Mean LoanorignalAmount\n") +
ggtitle("Mean Loan Amount vs CreditScoreRangeUpper
by IsBorrowerHomeowner\n")
LoanData.ld_by_CreditScoreRU_IsBorrowerHomeowner <- LoanData %>%
dplyr::group_by(CreditScoreRU,IsBorrowerHomeowner) %>%
dplyr::summarise(mean_Loan_Amount=mean(LoanOriginalAmount),
median_Loan_Amount=median(as.numeric(LoanOriginalAmount)),
n =n()) %>%
dplyr::ungroup() %>%
arrange(CreditScoreRangeUpper)
LoanData.ld_by_CreditScoreRU_IsBorrowerHomeowner <- LoanData %>%
dplyr::group_by(CreditScoreRangeUpper,IsBorrowerHomeowner) %>%
dplyr::summarise(mean_Loan_Amount=mean(LoanOriginalAmount),
median_Loan_Amount=median(as.numeric(LoanOriginalAmount)),
n =n()) %>%
dplyr::ungroup() %>%
arrange(CreditScoreRangeUpper)
mp7 <- ggplot(aes(x = CreditScoreRangeUpper, y = mean_Loan_Amount),
data = LoanData.ld_by_CreditScoreRU_IsBorrowerHomeowner) +
geom_line(aes(color=IsBorrowerHomeowner)) +
xlab("\nCreditScoreRangeUpper") +
ylab("Mean LoanorignalAmount\n") +
ggtitle("Mean Loan Amount vs CreditScoreRangeUpper
by IsBorrowerHomeowner\n")
suppressWarnings(print(mp7))
ggplot(aes(x = LoanOriginalAmount, fill = IncomeRange),
data = LoanData) +
geom_histogram(binwidth=500) +
facet_wrap(~ EmploymentStatus) +
scale_x_continuous(breaks = seq(0,20000, 5000),
limits = c(0,20000)) +
scale_y_continuous(breaks = seq(0,8000, 2000),
limits = c(0,8000)) +
scale_fill_brewer(palette="OrRd") +
ylab("Count") +
ggtitle("Loan counts for each of the Borrower's Employed Status\n")
ggplot(aes(x = factor(Term), y = CurrentDelinquencies),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_boxplot() +
scale_y_continuous(breaks = seq(1, 20, 2),limits=c(1,20)) +
xlab("Term") +
ylab("CurrentDelinquencies")
ggtitle("Delinquencies by Term\n")
bp2 <- ggplot(aes(x = factor(Term), y = CurrentDelinquencies),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_boxplot() +
scale_y_continuous(breaks = seq(1, 20, 2),limits=c(1,20)) +
xlab("Term") +
ylab("CurrentDelinquencies")
ggtitle("Delinquencies by Term\n")
bp2 <- ggplot(aes(x = factor(Term), y = CurrentDelinquencies),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_boxplot() +
scale_y_continuous(breaks = seq(1, 20, 2),limits=c(1,20)) +
xlab("Term") +
ylab("CurrentDelinquencies")
ggtitle("Delinquencies by Term\n")
bp2 <- ggplot(aes(x = factor(Term), y = CurrentDelinquencies),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_boxplot() +
scale_y_continuous(breaks = seq(1, 20, 2),limits=c(1,20)) +
xlab("Term") +
ylab("CurrentDelinquencies") +
ggtitle("Delinquencies by Term\n")
suppressWarnings(print(bp2))
ggplot(aes(x = Year, y = LP_NetPrincipalLoss),
data = LoanDataPL) +
geom_boxplot() +
xlab('Year') +
ylab('LP_NetPrincipalLoss') +
ggtitle('year vs LP_NetPrincipalLoss\n')
LoanDataPL <- subset(LoanData,LoanData$LP_NetPrincipalLoss>0)
ggplot(aes(x = factor(Year), y = LP_NetPrincipalLoss),
data = LoanDataPL) +
geom_boxplot() +
xlab('Year') +
ylab('LP_NetPrincipalLoss') +
ggtitle('year vs LP_NetPrincipalLoss\n')
ggplot(aes(x = factor(Year), y = LP_NetPrincipalLoss),
data = LoanDataPL) +
geom_boxplot(aes(fill = Year)) +
scale_fill_brewer(palette='OrRd') +
xlab('Year') +
ylab('LP_NetPrincipalLoss') +
ggtitle('year vs LP_NetPrincipalLoss\n')
by(LoanData$LoanOriginalAmount,
LoanData$IsBorrowerHomeowner,
summary)
by(LoanDataPL$LP_NetPrincipalLoss,
LoanDataPL$Year,
summary)
ggplot(aes(x = Year, y = CurrentDelinquencies,color=IncomeRange),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_point() +
scale_color_brewer(palette='Oranges') +
facet_wrap(~ IncomeRange) +
theme(axis.text.x = element_text(angle = 90)) +
xlab('Year') +
ylab('CurrentDelinquencies') +
ggtitle('Number of delinquences per year By Income Range\n')
ggplot(aes(x = CurrentDelinquencies,
y = LoanOriginalAmount,
color = EmploymentStatus),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_jitter(alpha=1/10) +
scale_y_continuous(breaks = seq(0,40000, 5000),
limits = c(0,40000)) +
scale_color_brewer(palette='Set1') +
theme_minimal() +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
xlab('CurrentDelinquencies') +
ylab('LoanOriginalAmount') +
ggtitle('CurrentDelinquencies vs LoanOriginalAmount
by EmploymentStatus\n')
ggplot(aes(x = CurrentDelinquencies,
y = LoanOriginalAmount,
color = EmploymentStatus),
data = subset(LoanData,LoanData$CurrentDelinquencies > 1 &
!is.na(CurrentDelinquencies))) +
geom_jitter(alpha=1/10) +
scale_y_continuous(breaks = seq(0,40000, 5000),
limits = c(0,40000)) +
scale_color_brewer(palette='Set1') +
theme_minimal() +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
xlab('CurrentDelinquencies') +
ylab('LoanOriginalAmount') +
ggtitle('CurrentDelinquencies vs LoanOriginalAmount
by EmploymentStatus\n')
ggplot(aes(x = Year, y = CurrentDelinquencies,color=IsBorrowerHomeowner),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_point(alpha=1/4) +
scale_color_brewer(palette="Set1") +
facet_wrap(~ IsBorrowerHomeowner) +
theme(axis.text.x = element_text(angle = 90)) +
xlab('Year') +
ylab('CurrentDelinquencies') +
ggtitle('Number of delinquences per year By Borrower Type\n')
ggplot(aes(x = Year, y = CurrentDelinquencies,color=IsBorrowerHomeowner),
data = subset(LoanData,LoanData$CurrentDelinquencies > 1 &
!is.na(CurrentDelinquencies))) +
geom_point(alpha=1/4) +
scale_color_brewer(palette="Set1") +
facet_wrap(~ IsBorrowerHomeowner) +
theme(axis.text.x = element_text(angle = 90)) +
xlab('Year') +
ylab('CurrentDelinquencies') +
ggtitle('Number of delinquences per year By Borrower Type\n')
ggplot(aes(x = Year, y = CurrentDelinquencies,color=IsBorrowerHomeowner),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_point(alpha=1/4) +
scale_color_brewer(palette="Set1") +
facet_wrap(~ IsBorrowerHomeowner) +
theme(axis.text.x = element_text(angle = 90)) +
xlab('Year') +
ylab('CurrentDelinquencies') +
ggtitle('Number of delinquences per year By Borrower Type\n')
ggplot(aes(x = LoanOriginalAmount, fill = IncomeRange),
data = LoanData) +
geom_histogram(binwidth=500) +
facet_wrap(~ EmploymentStatus) +
scale_x_continuous(breaks = seq(0,20000, 5000),
limits = c(0,20000)) +
scale_y_continuous(breaks = seq(0,8000, 2000),
limits = c(0,8000)) +
scale_fill_brewer(palette="OrRd") +
theme(axis.text.x = element_text(angle = 90)) +
ylab("Count") +
ggtitle("Loan counts for each of the Borrower's Employed Status\n")
ggplot(aes(x = LoanOriginalAmount, fill = IncomeRange),
data = LoanData) +
geom_histogram(binwidth=1000) +
facet_wrap(~ EmploymentStatus) +
scale_x_continuous(breaks = seq(0,20000, 5000),
limits = c(0,20000)) +
scale_y_continuous(breaks = seq(0,8000, 2000),
limits = c(0,8000)) +
scale_fill_brewer(palette="OrRd") +
theme(axis.text.x = element_text(angle = 90)) +
ylab("Count") +
ggtitle("Loan counts for each of the Borrower's Employed Status\n")
ggplot(aes(x = CurrentDelinquencies,
y = LoanOriginalAmount,
color = IncomeRange),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_jitter(alpha=1/5) +
scale_y_log10() +
scale_x_continuous(breaks = seq(0,40,5),limits = c(0,40)) +
scale_color_brewer(palette="BuGn") +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
theme_minimal() +
facet_wrap(~ IncomeRange) +
xlab('CurrentDelinquencies') +
ylab('LoanOriginalAmount') +
ggtitle('CurrentDelinquencies vs LoanOriginalAmount \n by IncomeRange\n')
ggplot(aes(x = CurrentDelinquencies,
y = LoanOriginalAmount,
color = IncomeRange),
data = subset(LoanData,LoanData$CurrentDelinquencies > 1 &
!is.na(CurrentDelinquencies))) +
geom_jitter(alpha=1/5) +
scale_y_log10() +
scale_x_continuous(breaks = seq(0,40,5),limits = c(0,40)) +
scale_color_brewer(palette="BuGn") +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
theme_minimal() +
facet_wrap(~ IncomeRange) +
xlab('CurrentDelinquencies') +
ylab('LoanOriginalAmount') +
ggtitle('CurrentDelinquencies vs LoanOriginalAmount \n by IncomeRange\n')
mp5 <- ggplot(aes(x = CurrentDelinquencies,
y = LoanOriginalAmount,
color = IncomeRange),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies))) +
geom_jitter(alpha=1/5) +
scale_y_log10() +
scale_x_continuous(breaks = seq(0,40,5),limits = c(0,40)) +
scale_color_brewer(palette="BuGn") +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
theme_minimal() +
facet_wrap(~ IncomeRange) +
xlab('CurrentDelinquencies') +
ylab('LoanOriginalAmount') +
ggtitle('CurrentDelinquencies vs LoanOriginalAmount \n by IncomeRange\n')
suppressWarnings(print(mp5))
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 0 &
!is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
color = IncomeRange)) +
geom_jitter(size=1) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ EmploymentStatus) +
scale_color_brewer(type = 'seq',palette="Greens") +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by EmploymentStatus\n")
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 1 &
!is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
color = IncomeRange)) +
geom_jitter(alpha=1/4) +
scale_y_continuous(breaks = seq(0,40,5),limits = c(0,40)) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ EmploymentStatus) +
scale_color_brewer(type = 'seq',palette="Greens") +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by EmploymentStatus\n")
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 1 &
!is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
color = IncomeRange)) +
geom_jitter(alpha=1/4) +
scale_y_continuous(breaks = seq(0,40,5),limits = c(0,40)) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ EmploymentStatus) +
scale_color_brewer(palette="OrRd") +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by EmploymentStatus\n")
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 1 &
!is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
color = IncomeRange)) +
geom_jitter(alpha=1/4) +
scale_y_continuous(breaks = seq(0,40,5),limits = c(0,40)) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ EmploymentStatus) +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
scale_color_brewer(palette="OrRd") +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by EmploymentStatus\n")
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 1 &
!is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
color = IncomeRange)) +
geom_jitter(alpha=1/4) +
scale_y_continuous(breaks = seq(0,40,5),limits = c(0,40)) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ EmploymentStatus) +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
scale_color_brewer(palette="OrRd") +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by EmploymentStatus\n")
fp2 <- ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 1 &
!is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
color = IncomeRange)) +
geom_jitter(alpha=1/4) +
scale_y_continuous(breaks = seq(0,40,5),limits = c(0,40)) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ EmploymentStatus) +
guides(colour = guide_legend(override.aes = list(alpha = 1,size=5))) +
scale_color_brewer(palette="OrRd") +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by EmploymentStatus\n")
suppressWarnings(print(fp2))
ggplot(LoanData, mapping = aes(x = BorrowerRate)) +
layer(geom = "bar",
mapping = aes(fill = EmploymentStatus),
stat = "bin",
position="stack",
stat_params = list(binwidth = 0.001)) +
scale_x_continuous(breaks = seq(0.3,0.4, 0.01),
limits = c(0.3,0.4)) +
scale_y_continuous(breaks = seq(0,7000, 1000),
limits = c(0,7000)) +
xlab('Borrower Rate') +
ylab('Number of Loans(count)') +
ggtitle('Number of Loans by Borrower Rate\n')
ggplot(LoanData, mapping = aes(x = BorrowerRate)) +
layer(geom = "bar",
mapping = aes(fill = EmploymentStatus),
stat = "bin",
position="stack",
stat_params = list(binwidth = 0.001)) +
scale_x_continuous(breaks = seq(0.3,0.4, 0.01),
limits = c(0.3,0.4)) +
scale_y_continuous(breaks = seq(0,4000, 500),
limits = c(0,4000)) +
xlab('Borrower Rate') +
ylab('Number of Loans(count)') +
ggtitle('Number of Loans by Borrower Rate\n')
ggplot(LoanData, mapping = aes(x = BorrowerRate)) +
layer(geom = "bar",
mapping = aes(fill = EmploymentStatus),
stat = "bin",
position="stack",
stat_params = list(binwidth = 0.001)) +
scale_x_continuous(breaks = seq(0.3,0.37, 0.01),
limits = c(0.3,0.37)) +
scale_y_continuous(breaks = seq(0,4000, 500),
limits = c(0,4000)) +
xlab('Borrower Rate') +
ylab('Number of Loans(count)') +
ggtitle('Number of Loans by Borrower Rate\n')
ggplot(LoanData, mapping = aes(x = BorrowerRate)) +
layer(geom = "bar",
mapping = aes(fill = EmploymentStatus),
stat = "bin",
position="stack",
stat_params = list(binwidth = 0.01)) +
scale_x_continuous(breaks = seq(0.3,0.37, 0.01),
limits = c(0.3,0.37)) +
scale_y_continuous(breaks = seq(0,4000, 500),
limits = c(0,4000)) +
xlab('Borrower Rate') +
ylab('Number of Loans(count)') +
ggtitle('Number of Loans by Borrower Rate\n')
ggplot(LoanData, mapping = aes(x = BorrowerRate)) +
layer(geom = "bar",
mapping = aes(fill = EmploymentStatus),
stat = "bin",
position="stack",
stat_params = list(binwidth = 30)) +
scale_x_continuous(breaks = seq(0.3,0.37, 0.01),
limits = c(0.3,0.37)) +
scale_y_continuous(breaks = seq(0,4000, 500),
limits = c(0,4000)) +
xlab('Borrower Rate') +
ylab('Number of Loans(count)') +
ggtitle('Number of Loans by Borrower Rate\n')
ggplot(LoanData, mapping = aes(x = BorrowerRate)) +
layer(geom = "bar",
mapping = aes(fill = EmploymentStatus),
stat = "bin",
position="stack",
stat_params = list(binwidth = 1)) +
scale_x_continuous(breaks = seq(0.3,0.37, 0.01),
limits = c(0.3,0.37)) +
scale_y_continuous(breaks = seq(0,4000, 500),
limits = c(0,4000)) +
xlab('Borrower Rate') +
ylab('Number of Loans(count)') +
ggtitle('Number of Loans by Borrower Rate\n')
ggplot(LoanData, mapping = aes(x = BorrowerRate)) +
layer(geom = "bar",
mapping = aes(fill = EmploymentStatus),
stat = "bin",
position="stack",
stat_params = list(binwidth = .1)) +
scale_x_continuous(breaks = seq(0.3,0.37, 0.01),
limits = c(0.3,0.37)) +
scale_y_continuous(breaks = seq(0,4000, 500),
limits = c(0,4000)) +
xlab('Borrower Rate') +
ylab('Number of Loans(count)') +
ggtitle('Number of Loans by Borrower Rate\n')
ggplot(LoanData, mapping = aes(x = BorrowerRate)) +
layer(geom = "bar",
mapping = aes(fill = EmploymentStatus),
stat = "bin",
position="stack",
stat_params = list(binwidth = .01)) +
scale_x_continuous(breaks = seq(0.3,0.37, 0.01),
limits = c(0.3,0.37)) +
scale_y_continuous(breaks = seq(0,4000, 500),
limits = c(0,4000)) +
xlab('Borrower Rate') +
ylab('Number of Loans(count)') +
ggtitle('Number of Loans by Borrower Rate\n')
ggplot(LoanData, mapping = aes(x = BorrowerRate)) +
layer(geom = "bar",
mapping = aes(fill = EmploymentStatus),
stat = "bin",
position="stack",
stat_params = list(binwidth = .06)) +
scale_x_continuous(breaks = seq(0.3,0.37, 0.01),
limits = c(0.3,0.37)) +
scale_y_continuous(breaks = seq(0,4000, 500),
limits = c(0,4000)) +
xlab('Borrower Rate') +
ylab('Number of Loans(count)') +
ggtitle('Number of Loans by Borrower Rate\n')
ggplot(LoanData, mapping = aes(x = BorrowerRate)) +
layer(geom = "bar",
mapping = aes(fill = EmploymentStatus),
stat = "bin",
position="stack",
stat_params = list(binwidth = .005)) +
scale_x_continuous(breaks = seq(0.3,0.37, 0.01),
limits = c(0.3,0.37)) +
scale_y_continuous(breaks = seq(0,4000, 500),
limits = c(0,4000)) +
xlab('Borrower Rate') +
ylab('Number of Loans(count)') +
ggtitle('Number of Loans by Borrower Rate\n')
ggplot(LoanData, mapping = aes(x = BorrowerRate)) +
layer(geom = "bar",
mapping = aes(fill = EmploymentStatus),
stat = "bin",
position="stack",
stat_params = list(binwidth = .001)) +
scale_x_continuous(breaks = seq(0.3,0.37, 0.01),
limits = c(0.3,0.37)) +
scale_y_continuous(breaks = seq(0,4000, 500),
limits = c(0,4000)) +
xlab('Borrower Rate') +
ylab('Number of Loans(count)') +
ggtitle('Number of Loans by Borrower Rate\n')
bp10 <- ggplot(LoanData, mapping = aes(x = BorrowerRate)) +
layer(geom = "bar",
mapping = aes(fill = EmploymentStatus),
stat = "bin",
position="stack",
stat_params = list(binwidth = .001)) +
scale_x_continuous(breaks = seq(0.3,0.37, 0.01),
limits = c(0.3,0.37)) +
scale_y_continuous(breaks = seq(0,4000, 500),
limits = c(0,4000)) +
xlab('Borrower Rate') +
ylab('Number of Loans(count)') +
ggtitle('Number of Loans by Borrower Rate\n')
suppresswarnings(print(bp10))
suppressWarnings(print(bp10))
